// Forge module - Forge-specific implementations and entry points
// Contains Forge platform implementations and mod loading

plugins {
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

archivesBaseName = 'businesscraft-forge'

minecraft {
    mappings channel: 'parchment', version: '2023.06.26-1.20.1'
    
    runs {
        client {
            workingDirectory project.file('../run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            
            // Clean launch configuration without mixin-related arguments

            mods {
                businesscraft {
                    source sourceSets.main
                    source project(':common').sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('../run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            
            // Clean launch configuration without mixin-related arguments
            
            mods {
                businesscraft {
                    source sourceSets.main
                    source project(':common').sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.0'
    
    // Include common module
    implementation project(':common')
    
    // Temporarily removing Architectury to isolate mixin conflicts - using native Forge APIs
    // implementation 'dev.architectury:architectury-forge:9.2.14'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "businesscraft-forge",
            "Specification-Vendor": "Quackers29",
            "Specification-Version": "1", 
            "Implementation-Title": "BusinessCraft Forge",
            "Implementation-Version": project.version,
            "Implementation-Vendor": "Quackers29",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    // Include common module resources
    from project(':common').sourceSets.main.resources
    from sourceSets.main.resources
}